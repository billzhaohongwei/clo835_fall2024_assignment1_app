name: Deploy to ECR
# Updated ECR Repo week5 assignment1 09/30/2024
on: 
  push:
    branches: [ development ]

jobs:
  
  build:
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
        AWS_REGION: us-east-1

    # Build, tag, and push the Web Application image
    - name: Build, tag, and push Web Application image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_WEBAPP: clo835-assignment1_webapp_repo
        IMAGE_TAG: v0.1
      run: |
        cd clo835_fall2024_assignment1_app  # Assuming this path is where the Dockerfile for webapp is located
        ls -ltra
        # Build the Docker image for the Web Application
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_WEBAPP:$IMAGE_TAG .
        # Push the Web Application image to Amazon ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_WEBAPP:$IMAGE_TAG

    # Build, tag, and push the MySQL Database image
    - name: Build, tag, and push MySQL Database image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY_MYSQL: clo835-assignment1_mysql_repo
        IMAGE_TAG: v0.1
      run: |
        cd clo835_fall2024_assignment1_app  # Assuming this path is where the Dockerfile for MySQL is located
        ls -ltra
        # Build the Docker image for MySQL Database
        # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY_MYSQL:$IMAGE_TAG .
        # Push the MySQL Database image to Amazon ECR
        docker push $ECR_REGISTRY/$ECR_REPOSITORY_MYSQL:$IMAGE_TAG
